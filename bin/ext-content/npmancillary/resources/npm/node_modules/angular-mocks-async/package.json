{
  "_args": [
    [
      {
        "raw": "angular-mocks-async@git+https://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
        "scope": null,
        "escapedName": "angular-mocks-async",
        "name": "angular-mocks-async",
        "rawSpec": "git+https://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
        "spec": "git+https://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
          "sshUrl": "git+ssh://git@github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
          "httpsUrl": "git+https://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
          "gitUrl": "git://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
          "shortcut": "github:amoldavsky/angular-mocks-async#ea49aed2efe6eb84d435342996803fe137b64196",
          "directUrl": "https://raw.githubusercontent.com/amoldavsky/angular-mocks-async/ea49aed2efe6eb84d435342996803fe137b64196/package.json"
        }
      },
      "/opt/hybris_6.7.0.3/hybris/bin/ext-content/npmancillary/resources/npm"
    ]
  ],
  "_from": "angular-mocks-async@git+https://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
  "_id": "angular-mocks-async@1.0.1",
  "_inCache": true,
  "_location": "/angular-mocks-async",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular-mocks-async@git+https://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
    "scope": null,
    "escapedName": "angular-mocks-async",
    "name": "angular-mocks-async",
    "rawSpec": "git+https://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
    "spec": "git+https://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
      "sshUrl": "git+ssh://git@github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
      "httpsUrl": "git+https://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
      "gitUrl": "git://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
      "shortcut": "github:amoldavsky/angular-mocks-async#ea49aed2efe6eb84d435342996803fe137b64196",
      "directUrl": "https://raw.githubusercontent.com/amoldavsky/angular-mocks-async/ea49aed2efe6eb84d435342996803fe137b64196/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
  "_shasum": "16ae8a4b1176e17d2ce5674eb7f85192de54138e",
  "_shrinkwrap": null,
  "_spec": "angular-mocks-async@git+https://github.com/amoldavsky/angular-mocks-async.git#ea49aed2efe6eb84d435342996803fe137b64196",
  "_where": "/opt/hybris_6.7.0.3/hybris/bin/ext-content/npmancillary/resources/npm",
  "author": {
    "name": "Assaf Moldavsky"
  },
  "dependencies": {},
  "description": "AngularJS module to mock async HTTP",
  "devDependencies": {
    "chai": "^3.5.0",
    "codecov.io": "^0.1.6",
    "gulp": "^3.9.1",
    "gulp-cli": "1.2.2",
    "gulp-karma-runner": "1.2.0",
    "karma": "^1.3.0 ",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-coverage": "^1.1.1",
    "karma-mocha": "^1.2.0",
    "karma-spec-reporter": "^0.0.26",
    "mocha": "^3.1.2",
    "node-minify": "^2.0.2"
  },
  "engines": {
    "node": ">=6.9.4",
    "npm": ">=3.10.10"
  },
  "gitHead": "ea49aed2efe6eb84d435342996803fe137b64196",
  "keywords": [
    "angular",
    "angularjs",
    "mock",
    "mocks",
    "http",
    "ngMockE2E",
    "ngMock",
    "async"
  ],
  "name": "angular-mocks-async",
  "optionalDependencies": {},
  "readme": "# angular-mocks-async\nAngularJS ngMockE2E Async\n<br><br>\n\nAngular 1.3.0 [![CircleCI](https://circleci.com/gh/amoldavsky/angular-mocks-async/tree/master.svg?style=shield)](https://circleci.com/gh/amoldavsky/angular-mocks-async)\n\nAngular 1.5.8 [![CircleCI](https://circleci.com/gh/amoldavsky/angular-mocks-async/tree/master.svg?style=shield)](https://circleci.com/gh/amoldavsky/angular-mocks-async)\n\n[![codecov](https://codecov.io/gh/amoldavsky/angular-mocks-async/branch/master/graph/badge.svg)](https://codecov.io/gh/amoldavsky/angular-mocks-async)\n<br><br>\n\nAn abstraction on top of ngMockE2E to support async calls using promises. \n\nIf you need to make an async operation ( such as working with WebSQL / IndexedDB ) the orignial ngMockE2E will fall through and you will never have the chance to respond with your own response.\n\nngMockE2EAsync decorates the $httpBackend by utilizing promises. Responses can now be in a form of a promise where the $httpBackend will original function will not be called until your promise has been resolved. Once resolved the original $httpBackend APIs will be called and things will flow their natural ways back to the caller.\n\n## Demo\n[jsFiddle](https://jsfiddle.net/amoldavsky/omw8m23L/) [Plunker](https://plnkr.co/edit/IWtaW9?p=preview)\n\n## Install\n\n```html\n<script src=\"angular.js\"></script>\n<script src=\"angular-mocks.js\"></script>\n<script src=\"//cdn.rawgit.com/amoldavsky/angular-mocks-async/master/src/angular-mocks-async.js\"></script>\n```\n\n## Usage\n\nThe decorator exposes a new API\n```javascript\n\t$httpBackend.whenAsync()\n```\nWhich is equivalent to the $httpBackend.when() API but expects a promise in the .respond() function.\n\nHere is an example for an HTTP GET\n```javascript\n(function( ng ) {\n\n\tvar app = ng.module('myApp', ['ngMockE2E', 'ngMockE2EAsync'])\n\t\n\tapp.run( [ '$httpBackend', '$q', function( $httpBackend, $q ) {\n\n\t\t$httpBackend.whenAsync(\n\t\t\t    'GET',\n\t\t\t    new RegExp( 'http://api.example.com/user/.+$' )\n\t\t).respond( function( method, url, data, config ) {\n\n\t\t\tvar re = /.*\\/user\\/(\\w+)/;\n\t\t\tvar userId = parseInt(url.replace(re, '$1'), 10);\n\n\t\t\tvar response = $q.defer();\n\n\t\t\tsetTimeout( function() {\n\n\t\t\t    var data = {\n\t\t\t\tuserId: userId\n\t\t\t    };\n\t\t\t    response.resolve( [ 200, \"this is a mocked async GET response\", \"123\" ] );\n\n\t\t\t}, 1000 );\n\n\t\t\treturn response.promise;\n\n\t\t});\n\t\t\n\t\t$http({\n\t\t\turl: \"http://api.example.com/user/103\",\n\t\t\tmethod: 'GET'\n\t\t}).then( function( response ) {\n\t\t\talert( response.data );\n\t\t});\n\t}]);\n}(angular);\n```\nYou may use this API the same way for POST, PUT, UPDATE, and DELETE.\n\n## Details\n\nThe code adds a custom decorator function to the existing angular mock namespace which already hold similar decorator functions - angular.mock.$HttpBackendAsyncDecorator.\n\n## Developing & Testing\n\ngulpfile.js has the following tasks:\n```\ncompile\ntest-unminified\ntest-minified\n```\nPlease be sure to run these tests when making changes\n\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "scripts": {
    "codecov": "cat coverage/*/lcov.info | ./node_modules/codecov.io/bin/codecov.io.js",
    "karma": "./node_modules/karma/bin/karma start"
  },
  "version": "1.0.1"
}
