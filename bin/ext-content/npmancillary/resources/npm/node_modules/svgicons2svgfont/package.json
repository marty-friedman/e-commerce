{
  "_args": [
    [
      {
        "raw": "svgicons2svgfont@https://registry.npmjs.org/svgicons2svgfont/-/svgicons2svgfont-5.0.2.tgz",
        "scope": null,
        "escapedName": "svgicons2svgfont",
        "name": "svgicons2svgfont",
        "rawSpec": "https://registry.npmjs.org/svgicons2svgfont/-/svgicons2svgfont-5.0.2.tgz",
        "spec": "https://registry.npmjs.org/svgicons2svgfont/-/svgicons2svgfont-5.0.2.tgz",
        "type": "remote"
      },
      "/opt/hybris_6.7.0.3/hybris/bin/ext-content/npmancillary/resources/npm"
    ]
  ],
  "_from": "svgicons2svgfont@https://registry.npmjs.org/svgicons2svgfont/-/svgicons2svgfont-5.0.2.tgz",
  "_id": "svgicons2svgfont@5.0.2",
  "_inCache": true,
  "_location": "/svgicons2svgfont",
  "_phantomChildren": {},
  "_requested": {
    "raw": "svgicons2svgfont@https://registry.npmjs.org/svgicons2svgfont/-/svgicons2svgfont-5.0.2.tgz",
    "scope": null,
    "escapedName": "svgicons2svgfont",
    "name": "svgicons2svgfont",
    "rawSpec": "https://registry.npmjs.org/svgicons2svgfont/-/svgicons2svgfont-5.0.2.tgz",
    "spec": "https://registry.npmjs.org/svgicons2svgfont/-/svgicons2svgfont-5.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/gulp-svgicons2svgfont"
  ],
  "_resolved": "https://registry.npmjs.org/svgicons2svgfont/-/svgicons2svgfont-5.0.2.tgz",
  "_shasum": "0511823c6491be1a7d543292e29a8ae627ad0406",
  "_shrinkwrap": null,
  "_spec": "svgicons2svgfont@https://registry.npmjs.org/svgicons2svgfont/-/svgicons2svgfont-5.0.2.tgz",
  "_where": "/opt/hybris_6.7.0.3/hybris/bin/ext-content/npmancillary/resources/npm",
  "author": {
    "name": "Nicolas Froidure",
    "url": "http://www.insertafter.com/blog.html"
  },
  "bin": {
    "svgicons2svgfont": "bin/svgicons2svgfont.js"
  },
  "bugs": {
    "url": "https://github.com/nfroidure/svgicons2svgfont/issues"
  },
  "dependencies": {
    "commander": "^2.9.0",
    "neatequal": "^1.0.0",
    "readable-stream": "^2.0.4",
    "sax": "^1.1.5",
    "string.fromcodepoint": "^0.2.1",
    "string.prototype.codepointat": "^0.2.0",
    "svg-pathdata": "^1.0.4"
  },
  "description": "Read a set of SVG icons and ouput a SVG font",
  "devDependencies": {
    "coveralls": "^2.11.4",
    "eslint": "^1.10.0",
    "eslint-config-simplifield": "^1.2.2",
    "istanbul": "^0.4.0",
    "mocha": "^2.3.4",
    "mocha-lcov-reporter": "^1.0.0",
    "streamtest": "^1.2.1"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "homepage": "https://github.com/nfroidure/svgicons2svgfont",
  "keywords": [
    "SVG",
    "icons",
    "font",
    "creation",
    "fonts"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "name": "svgicons2svgfont",
  "optionalDependencies": {},
  "readme": "# svgicons2svgfont\n> svgicons2svgfont is a simple tool to merge multiple icons to an SVG font.\n\n[![NPM version](https://badge.fury.io/js/svgicons2svgfont.svg)](https://npmjs.org/package/svgicons2svgfont) [![Build status](https://secure.travis-ci.org/nfroidure/svgicons2svgfont.png)](https://travis-ci.org/nfroidure/svgicons2svgfont) [![Dependency Status](https://david-dm.org/nfroidure/svgicons2svgfont.svg)](https://david-dm.org/nfroidure/svgicons2svgfont) [![devDependency Status](https://david-dm.org/nfroidure/svgicons2svgfont/dev-status.svg)](https://david-dm.org/nfroidure/svgicons2svgfont#info=devDependencies) [![Coverage Status](https://coveralls.io/repos/nfroidure/svgicons2svgfont/badge.svg?branch=master)](https://coveralls.io/r/nfroidure/svgicons2svgfont?branch=master) [![Code Climate](https://codeclimate.com/github/nfroidure/svgicons2svgfont.svg)](https://codeclimate.com/github/nfroidure/svgicons2svgfont)\n\n'rect', 'line', 'circle', 'ellipsis', 'polyline' and 'polygon' shapes will be\n converted to pathes. Multiple pathes will be merged.\n\nTransform attributes support is currenly experimental,\n [report issues if any](https://github.com/nfroidure/svgicons2svgfont/issues/6).\n\nYou can test this library with the\n [frontend generator](http://nfroidure.github.io/svgiconfont/).\n\nYou may want to convert fonts to icons, if so use\n [svgfont2svgicons](https://github.com/nfroidure/svgfont2svgicons).\n\n## Usage\n\n### In your scripts\n```js\nvar svgicons2svgfont = require('svgicons2svgfont');\nvar fs = require('fs');\nvar fontStream = svgicons2svgfont({\n  fontName: 'hello'\n});\n\n// Setting the font destination\nfontStream.pipe(fs.createWriteStream('fonts/hello.svg'))\n  .on('finish',function() {\n    console.log('Font successfully created!')\n  })\n  .on('error',function(err) {\n    console.log(err);\n  });\n\n// Writing glyphs\nvar glyph1 = fs.createReadStream('icons/icon1.svg');\nglyph1.metadata = {\n  unicode: ['\\uE001\\uE002'],\n  name: 'icon1'\n};\nfontStream.write(glyph1);\n// Multiple unicode values are possible\nvar glyph2 = fs.createReadStream('icons/icon1.svg');\nglyph2.metadata = {\n  unicode: ['\\uE002', '\\uEA02'],\n  name: 'icon2'\n};\nfontStream.write(glyph2);\n// Either ligatures are available\nvar glyph3 = fs.createReadStream('icons/icon1.svg');\nglyph3.metadata = {\n  unicode: ['\\uE001\\uE002'],\n  name: 'icon1-icon2'\n};\nfontStream.write(glyph3);\n\n// Do not forget to end the stream\nfontStream.end();\n```\n\n## CLI interface\nAll options are available except the `log` one by using this pattern:\n `--{LOWER_CASE(optionName)}={optionValue}`.\n```sh\nsvgicons2svgfont --fontname=hello -o font/destination/file.svg icons/directory/*.svg\n```\nNote that you won't be able to customize icon names or icons unicodes by\n passing options but by using the following convention to name your icons files:\n `${icon.unicode}-${icon.name}.svg` where `icon.unicode` is a comma separated\n list of unicode strings (ex: 'uEA01,uE001,uE001uE002', note that the last\n string is in fact a ligature).\n\nThere is a few more options for the CLI interface, you can list all of them:\n```js\nsvgicons2svgfont --help\n#  Usage: svgicons2svgfont [options] <icons ...>\n#\n#  Options:\n#\n#    -h, --help                  output usage information\n#    -V, --version               output the version number\n#    -v, --verbose               tell me everything!\n#    -o, --output [/dev/stdout]  Output file.\n#    -f, --fontname [value]      the font family name you want [iconfont].\n#    -i, --fontId [value]        The font id you want [fontname]\n#    -st, --style [value]        the font style you want [iconfont].\n#    -we, --weight [value]       the font weight you want [iconfont].\n#    -w, --fixedWidth            creates a monospace font of the width of the largest input icon.\n#    -c, --centerhorizontally    calculate the bounds of a glyph and center it horizontally.\n#    -n, --normalize             normalize icons by scaling them to the height of the highest icon.\n#    -h, --height [value]        the outputted font height [MAX(icons.height)].\n#    -r, --round [value]         setup the SVG path rounding [10e12].\n#    -d, --descent [value]       the font descent [0].\n#    -a, --ascent [value]        the font ascent [height - descent].\n#    -s, --startunicode [value]  the start unicode codepoint for unprefixed files [0xEA01].\n#    -a, --prependUnicode         prefix files with their automatically allocated unicode codepoint.\n#    -m, --metadata              content of the metadata tag.\n```\n\n## API\n\n### svgicons2svgfont(options)\n\n#### options.fontName\nType: `String`\nDefault value: `'iconfont'`\n\nThe font family name you want.\n\n#### options.fontId\nType: `String`\nDefault value: the options.fontName value\n\nThe font id you want.\n\n#### options.fontStyle\nType: `String`\nDefault value: `''`\n\nThe font style you want.\n\n#### options.fontWeight\nType: `String`\nDefault value: `''`\n\nThe font weight you want.\n\n#### options.fixedWidth\nType: `Boolean`\nDefault value: `false`\n\nCreates a monospace font of the width of the largest input icon.\n\n#### options.centerHorizontally\nType: `Boolean`\nDefault value: `false`\n\nCalculate the bounds of a glyph and center it horizontally.\n\n**Warning:** The bounds calculation is currently a naive implementation that\n may not work for some icons. We need to create a svg-pathdata-draw module on\n top of svg-pathdata to get the real bounds of the icon. It's on the bottom\n of my to do, but feel free to work on it. Discuss it in the\n [related issue](https://github.com/nfroidure/svgicons2svgfont/issues/18).\n\n#### options.normalize\nType: `Boolean`\nDefault value: `false`\n\nNormalize icons by scaling them to the height of the highest icon.\n\n#### options.fontHeight\nType: `Number`\nDefault value: `MAX(icons.height)`\nThe outputted font height  (defaults to the height of the highest input icon).\n\n#### options.round\nType: `Number`\nDefault value: `10e12`\nSetup SVG path rounding.\n\n#### options.descent\nType: `Number`\nDefault value: `0`\n\nThe font descent. It is usefull to fix the font baseline yourself.\n\n**Warning:**  The descent is a positive value!\n\n#### options.ascent\nType: `Number`\nDefault value: `fontHeight - descent`\n\nThe font ascent. Use this options only if you know what you're doing. A suitable\n value for this is computed for you.\n\n#### options.metadata\nType: `String`\nDefault value: `undefined`\n\nThe font [metadata](http://www.w3.org/TR/SVG/metadata.html). You can set any\n character data in but it is the be suited place for a copyright mention.\n\n#### options.log\nType: `Function`\nDefault value: `console.log`\n\nAllows you to provide your own logging function. Set to `function(){}` to\n impeach logging.\n\n## Build systems\n\n### Grunt plugins\n\n[grunt-svgicons2svgfont](https://github.com/nfroidure/grunt-svgicons2svgfont)\n and [grunt-webfont](https://github.com/sapegin/grunt-webfont).\n\n### Gulp plugins\n\nTry [gulp-iconfont](https://github.com/nfroidure/gulp-iconfont) and\n  [gulp-svgicons2svgfont](https://github.com/nfroidure/gulp-svgicons2svgfont).\n\n### Stylus plugin\n\nUse [stylus-iconfont](https://www.npmjs.org/package/stylus-iconfont).\n\n### Mimosa plugin\n\nUse [mimosa-svgs-to-iconfonts](https://www.npmjs.org/package/mimosa-svgs-to-iconfonts).\n\n## CLI alternatives\n\nYou can combine this plugin's CLI interface with\n [svg2ttf](https://www.npmjs.com/package/svg2ttf),\n [ttf2eot](https://www.npmjs.com/package/ttf2eot),\n [ttf2woff](https://www.npmjs.com/package/ttf2woff)\n and [ttf2woff2](https://www.npmjs.com/package/ttf2woff2).\nYou can also use [webfonts-generator](https://www.npmjs.com/package/webfonts-generator).\n\n## Stats\n\n[![NPM](https://nodei.co/npm/svgicons2svgfont.png?downloads=true&stars=true)](https://nodei.co/npm/svgicon2svgfont/)\n[![NPM](https://nodei.co/npm-dl/svgicons2svgfont.png)](https://nodei.co/npm/svgicon2svgfont/)\n\n## Contributing\nFeel free to push your code if you agree with publishing under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/nfroidure/svgicons2svgfont.git"
  },
  "scripts": {
    "cli": "env NPM_RUN_CLI=1",
    "cover": "istanbul cover --report html _mocha -- tests/*.mocha.js -R spec -t 5000",
    "coveralls": "istanbul cover _mocha --report lcovonly -- tests/*.mocha.js -R spec -t 5000 && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
    "lint": "eslint src/*.js bin/*.js tests/*.js",
    "preversion": "npm run lint && npm run test",
    "test": "mocha tests/*.mocha.js"
  },
  "version": "5.0.2"
}
