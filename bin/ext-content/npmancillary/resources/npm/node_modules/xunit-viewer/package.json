{
  "_args": [
    [
      {
        "raw": "xunit-viewer@https://registry.npmjs.org/xunit-viewer/-/xunit-viewer-5.0.4.tgz",
        "scope": null,
        "escapedName": "xunit-viewer",
        "name": "xunit-viewer",
        "rawSpec": "https://registry.npmjs.org/xunit-viewer/-/xunit-viewer-5.0.4.tgz",
        "spec": "https://registry.npmjs.org/xunit-viewer/-/xunit-viewer-5.0.4.tgz",
        "type": "remote"
      },
      "/opt/hybris_6.7.0.3/hybris/bin/ext-content/npmancillary/resources/npm"
    ]
  ],
  "_from": "xunit-viewer@https://registry.npmjs.org/xunit-viewer/-/xunit-viewer-5.0.4.tgz",
  "_id": "xunit-viewer@5.0.4",
  "_inCache": true,
  "_location": "/xunit-viewer",
  "_phantomChildren": {
    "escape-string-regexp": "1.0.5",
    "graceful-fs": "4.1.11",
    "has-ansi": "2.0.0",
    "js-base64": "2.4.3",
    "strip-ansi": "3.0.1",
    "uglify-to-browserify": "1.0.2",
    "yargs": "3.10.0"
  },
  "_requested": {
    "raw": "xunit-viewer@https://registry.npmjs.org/xunit-viewer/-/xunit-viewer-5.0.4.tgz",
    "scope": null,
    "escapedName": "xunit-viewer",
    "name": "xunit-viewer",
    "rawSpec": "https://registry.npmjs.org/xunit-viewer/-/xunit-viewer-5.0.4.tgz",
    "spec": "https://registry.npmjs.org/xunit-viewer/-/xunit-viewer-5.0.4.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/xunit-viewer/-/xunit-viewer-5.0.4.tgz",
  "_shasum": "61a4758655050d0ebdbc3a5c76c2cc268dd6bf94",
  "_shrinkwrap": null,
  "_spec": "xunit-viewer@https://registry.npmjs.org/xunit-viewer/-/xunit-viewer-5.0.4.tgz",
  "_where": "/opt/hybris_6.7.0.3/hybris/bin/ext-content/npmancillary/resources/npm",
  "author": {
    "name": "lukejpreston",
    "email": "lukejpreston@gmail.com"
  },
  "bin": {
    "xunit-viewer": "bin/xunit-viewer"
  },
  "bugs": {
    "url": "https://github.com/lukejpreston/xunit-viewer.git"
  },
  "dependencies": {
    "babel-core": "^6.23.1",
    "babel-preset-react-app": "^2.1.1",
    "babelify": "^7.3.0",
    "browserify": "^14.1.0",
    "bulma": "^0.3.2",
    "chalk": "^1.1.3",
    "detect-port": "^1.1.0",
    "express": "^4.15.2",
    "fs-extra": "^2.0.0",
    "fuzzysearch": "^1.0.3",
    "mustache": "^2.3.0",
    "node-watch": "^0.4.1",
    "nodemon": "^1.11.0",
    "normalize.css": "^5.0.0",
    "postcss": "^5.2.15",
    "postcss-cssnext": "^2.9.0",
    "promise": "^7.1.1",
    "react": "^15.4.2",
    "react-dom": "^15.4.2",
    "recursive-readdir": "^2.1.1",
    "socket.io": "^1.7.3",
    "titlecase": "^1.1.2",
    "uglify-js": "^2.8.7",
    "uglifycss": "^0.0.25",
    "uuid": "^3.0.1",
    "xml2js-parser": "^1.1.1"
  },
  "description": "parses xunit xml into xunit viewer",
  "devDependencies": {
    "eslint": "^3.17.0",
    "eslint-config-standard": "^7.0.0",
    "eslint-config-standard-react": "^4.2.0",
    "eslint-plugin-jasmine": "^2.2.0",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-react": "^6.10.0",
    "eslint-plugin-standard": "^2.1.1",
    "jest": "^19.0.2",
    "svg-to-react": "^0.1.0"
  },
  "directories": {
    "bin": "bin",
    "cli": "cli",
    "component": "component",
    "config": "config",
    "parser": "parser"
  },
  "homepage": "https://lukejpreston.github.io/xunit-viewer",
  "jest": {
    "testPathIgnorePatterns": [
      "<rootDir>[/\\\\](node_modules|scripts)[/\\\\]",
      "<rootDir>/component/suites/test.jsx",
      "<rootDir>/component/unbundled.js"
    ]
  },
  "keywords": [
    "test",
    "junit",
    "xunit",
    "viewer",
    "parser"
  ],
  "license": "MIT",
  "main": "xunit-viewer",
  "name": "xunit-viewer",
  "optionalDependencies": {},
  "readme": "# Xunit Viewer\n\n![Icon](https://raw.githubusercontent.com/lukejpreston/xunit-viewer/master/XunitViewerIcon.png)\n\n[![npm version](https://badge.fury.io/js/xunit-viewer.svg)](https://badge.fury.io/js/xunit-viewer)\n[![Downloads on npm](http://img.shields.io/npm/dm/xunit-viewer.svg)](https://www.npmjs.com/package/xunit-viewer)\n\nTakes your XMl xunit results and then turns it into a nice single HTML file\n\nHave a look at the [demo](https://lukejpreston.github.io/xunit-viewer/)\n\n## CLI\n\nYou can use xunit-viewer from the command line\n\nFirst install it\n\n`npm i -g xunit-viewer`\n\nThen run it\n\n`xunit-viewer`\n\nyou can also run it with these optional params, see the next section for what they default to\n\n```bash\n--results=file_or_folder\n--ignore=pattern_a,pattern_b,pattern_c\n--output=file_or_folder_or_console\n--title=\"The title\"\n--port=8080\n--watch\n--color=false\n--filter.suites.value=\"Suite names matching this value\"\n--filter.suites.types=all,pass,fail,skip,error,unknown\n--filter.tests.value=\"Test names matching this value\"\n--filter.tests.types=all,pass,fail,skip,error,unknown\n--filter.properties.value=\"Properties matching with key or value matching this value\"\n--filter.properties.types=all\n```\n\n## Node\n\nIf you want to run this from a node script instead of command line first install it\n\n`npm i -D xunit-viewer`\n\nThen from your scripts do the following\n\n```js\nconst XunitViewerCli = require('xunit-viewer/cli')\nXunitViewerCli({\n    results: '',\n    ignore: [],\n    output: false,\n    title: 'Xunit Viewer',\n    port: false,\n    watch: false,\n    color: true,\n    filter: {}\n})\n```\n\nall are optional, those are default values\n\n* `results` the file or folder where the results are, defaults to where the cli is running from i.e. `process.cwd()`\n* `ignore` an array of patterns to ignore or a single string with a pattern to ignore\n* `output` if folder will save a file `xunit-viewer.html` to that folder, if a file will save to that file if `'console'` then it will spit out the results to the console\n* `title` title for the HTML\n* `port` if `false` it will not start a server, otherwise it will start serving the output and not save not save a file unless you also provide `output`\n* `watch` will re run the cli when anything in `results` changes, if you have a port it will also update that via websockets\n* `color` if `output === 'console'` then it will either be in color or not\n* `filter` will filter out `suites`, `tests` and `properties` from the console output example\n```json\n{\n    \"suites\": {\n        value: \"Suite names matching this value\",\n        type: [\"all\", \"pass\", \"fail\", \"skip\", \"error\", \"unknown\"],\n    },\n    \"tests\": {\n        value: \"Test names matching this value\",\n        type: [\"all\", \"pass\", \"fail\", \"skip\", \"error\", \"unknown\"],\n    },\n    \"properties\": {\n        value: \"Properties matching with key or value matching this value\",\n        type: [\"all\"]\n    },\n}\n```\n\nif any value is invalid it will try and use default\n\n## Component\n\nYou will need to bring in React if you are using the component\n\nIt works best with webpack setup but you should be able to work it out if you need to\n\nThis is the view which you can reuse\n\n```js\nimport React from 'react'\nimport XunitViewer from 'xunit-viewer/component/xunit-viewer'\nimport 'xunit-viewer/component/index.css'\n\nlet MyWrapper = () => {\n    return <XunitViewer xml='' suites={[]} title='' />\n}\n```\n\n## Parser\n\nThis library is used to parse the xunit into JSON\n\nYou will have the read the data into a string before calling this library\n\nYou can safely use this in the browser and from node\n\n```js\nconst XunitViewerParser = require('xunit-viewer/parser')\nXunitViewerParser.parse('xml string')\n```\n\n## Junit Viewer\n\nJunit Viewer is now deprecated and is being replaced with this.\n\n### Why?\n\nBetter API\nBetter View\nUses React\nNested Suites\nUsing sockets and lighter\n\n## TODO\n\n* add a repl\n* meta data for slack\n* better error handling\n* set up something which will parse in browser\n* clean everything and wrote some more tests\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+https://github.com/lukejpreston/xunit-viewer.git",
    "type": "git"
  },
  "scripts": {
    "eslint": "eslint bin cli component config data parser scripts index.js && echo eslint pass",
    "jest": "jest",
    "start": "nodemon --watch cli --exec npm run xunit-viewer:all",
    "test": "npm run eslint && jest",
    "xunit-viewer": "./bin/xunit-viewer",
    "xunit-viewer:output": "./bin/xunit-viewer --results=data  --ignore=invalid.xml,blank_file.xml --watch --output=output.html",
    "xunit-viewer:sockets": "./bin/xunit-viewer --results=data --dev --watch  --ignore=invalid.xml,blank_file.xml --port=8080",
    "xunit-viewer:terminal": "./bin/xunit-viewer --results=data  --ignore=invalid.xml,blank_file.xml --terminal --watch --filter.suites.search=\"bacon\" --filter.suites.hidden=pass,fail --filter.tests.search=\"bacon\" --filter.tests.hidden=error,skip --filter.properties.search=\"x\" --filter.properties.hidden=all "
  },
  "version": "5.0.4"
}
