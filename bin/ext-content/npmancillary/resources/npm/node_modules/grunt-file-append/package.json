{
  "_args": [
    [
      {
        "raw": "grunt-file-append@https://registry.npmjs.org/grunt-file-append/-/grunt-file-append-0.0.7.tgz",
        "scope": null,
        "escapedName": "grunt-file-append",
        "name": "grunt-file-append",
        "rawSpec": "https://registry.npmjs.org/grunt-file-append/-/grunt-file-append-0.0.7.tgz",
        "spec": "https://registry.npmjs.org/grunt-file-append/-/grunt-file-append-0.0.7.tgz",
        "type": "remote"
      },
      "/opt/hybris_6.7.0.3/hybris/bin/ext-content/npmancillary/resources/npm"
    ]
  ],
  "_from": "grunt-file-append@https://registry.npmjs.org/grunt-file-append/-/grunt-file-append-0.0.7.tgz",
  "_id": "grunt-file-append@0.0.7",
  "_inCache": true,
  "_location": "/grunt-file-append",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-file-append@https://registry.npmjs.org/grunt-file-append/-/grunt-file-append-0.0.7.tgz",
    "scope": null,
    "escapedName": "grunt-file-append",
    "name": "grunt-file-append",
    "rawSpec": "https://registry.npmjs.org/grunt-file-append/-/grunt-file-append-0.0.7.tgz",
    "spec": "https://registry.npmjs.org/grunt-file-append/-/grunt-file-append-0.0.7.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-file-append/-/grunt-file-append-0.0.7.tgz",
  "_shasum": "3f7efa33696fa05770b28094f44508cafc5d2eda",
  "_shrinkwrap": null,
  "_spec": "grunt-file-append@https://registry.npmjs.org/grunt-file-append/-/grunt-file-append-0.0.7.tgz",
  "_where": "/opt/hybris_6.7.0.3/hybris/bin/ext-content/npmancillary/resources/npm",
  "author": {
    "name": "Efim Vl. Dejin",
    "email": "efim@dejin.pp.ua",
    "url": "http://dej.in.ua/"
  },
  "dependencies": {},
  "description": "Append or prepend data to file.",
  "devDependencies": {
    "grunt": ">0.4.1",
    "grunt-contrib-clean": ">0.4.0",
    "grunt-contrib-copy": ">0.4.1",
    "grunt-contrib-jshint": ">0.6.0",
    "grunt-contrib-nodeunit": ">0.2.0"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "http://dej.in.ua/grunt-file-append/",
  "keywords": [
    "gruntplugin"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "name": "grunt-file-append",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": ">0.4.1"
  },
  "readme": "# grunt-file-append\r\n\r\n> Append or prepend data to file.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `>0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-file-append --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-file-append');\r\n```\r\n\r\n## The \"file_append\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `file_append` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  file_append: {\r\n    default_options: {\r\n      files: [\r\n        {\r\n          append: \"text to append\",\r\n          prepend: \"text to prepend\",\r\n          input: '/path/to/input/file'\r\n          output: 'path/to/output/file'\r\n        }\r\n      ]\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n### Options\r\n\r\nArray of objects or functions which return structure:\r\n\r\n#### append\r\nType: `String|Function`\r\nDefault value: `''`\r\n\r\nA string value that is used to append to the end of file.\r\n\r\n#### prepend\r\nType: `String|Function`\r\nDefault value: `''`\r\n\r\nA string value that is used to append to the begin of file.\r\n\r\n#### input\r\nType: `String|Function`\r\n!Required\r\n\r\nA string value that is used to find original file.\r\n\r\n#### output\r\nType: `String|Function`\r\nDefault value: `input`\r\n\r\nA string value that is used to find output file. If undefined then data get from original file and writes to original file.\r\n\r\n### Usage Examples\r\n\r\n#### Example 1\r\nIn this example, show how to generate output file `tmp/testing1` which contain `\"goog.provide(\\\"goog.renaming\\\");\\n\"` and data from `./test/fixtures/testing1` file.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  file_append: {\r\n    default_options: {\r\n      files: [\r\n        {\r\n          prepend: \"goog.provide(\\\"goog.renaming\\\");\\n\",\r\n          input: './test/fixtures/testing1',\r\n          output: 'tmp/testing1'\r\n        }\r\n      ]\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n#### Example 2\r\nIn this example, show how to generate output file `tmp/testing2` which contain data from `tmp/testing2` file and `\"\\n/*\\n//@ sourceMappingURL=testing2.js.map\\n*/\"`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  file_append: {\r\n    default_options: {\r\n      files: [\r\n        function() {\r\n          return {\r\n            append: \"\\n/*\\n//@ sourceMappingURL=testing2.js.map\\n*/\"\r\n            input: 'tmp/testing2'\r\n          };\r\n        }\r\n      ]\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git@git.dejin.pp.ua:fima/grunt-file-append.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "0.0.7"
}
