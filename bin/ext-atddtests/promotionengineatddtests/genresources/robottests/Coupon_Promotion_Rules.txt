*** Settings ***
Resource          promotionengine/PromotionEngineServices_Keywords.txt
Resource          ruleengine/Util_Keywords.txt

*** Test Cases ***
Test_Coupon_Code_Fixed_Discount_On_Carts
	[Documentation]     Apply fixed discount on carts using one coupon code
	
	# Configuring rules and drools engine
	import electronicsstore sampledata
	import sourcerule data
	compile source rule for id "coupon_code_fixed_discount" with module "promotions-module-junit"
	set current site
  	
	# Setting variables
	${cartIdCustomerA}=    Set Variable    "022222"
    ${cartIdCustomerB}=    Set Variable    "022244"
	${product1}=    get product by code "1382080"
	
  	${couponCodeA}=    Set Variable    SUMMER69
	
	# Test for cartIdCustomerA
  	create cart "${cartIdCustomerA}"
	add "${product1}" to cart "${cartIdCustomerA}"
	${cartBeforePromo}=    get total of "${cartIdCustomerA}"
	Should Be Equal As Numbers    ${cartBeforePromo}    574.88
 
	# $10 discount on cartIdCustomerA with coupon
	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}"
 
  	${cartAfterPromo}=    get total of "${cartIdCustomerA}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    564.88
 
  	# Test for cartIdCustomerB
  	create cart "${cartIdCustomerB}"
	add "${product1}" to cart "${cartIdCustomerB}"
	${cartBeforePromo}=    get total of "${cartIdCustomerB}"
	Should Be Equal As Numbers    ${cartBeforePromo}    574.88
 
  	# $10 discount on cartIdCustomerB with coupon
  	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerB}"
  	${cartAfterPromo}=    get total of "${cartIdCustomerB}"
 
  	Should Be Equal As Numbers    ${cartAfterPromo}    564.88
  	
  	# release coupon for cartIdCustomerB
  	release coupon with code "${couponCodeA}" for cart "${cartIdCustomerB}"
  	
   ${cartAfterPromo}=    get total of "${cartIdCustomerB}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    574.88

Test_Coupon_Code_Fixed_Discount_On_Carts_Discount_Over_Cart_Total
	[Documentation]     Apply fixed discount on cart using one coupon code
	...					Discount from coupon is over cart total
	
	# Configuring rules and drools engine
	import electronicsstore sampledata
	import sourcerule data
	compile source rule for id "coupon_code_fixed_discount" with module "promotions-module-junit"
	set current site
  	
	# Setting variables
	${cartIdCustomerA}=    Set Variable    "022223"
	${product1}=    get product by code "137220"
	
  	${couponCodeA}=    Set Variable    SUMMER69
	
	# Test for cartIdCustomerA
  	create cart "${cartIdCustomerA}"
	add "${product1}" to cart "${cartIdCustomerA}"
	${cartBeforePromo}=    get total of "${cartIdCustomerA}"
	Should Be Equal As Numbers    ${cartBeforePromo}    8.00
 
	# $10 discount on cartIdCustomerA with coupon
	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}"
 
  	${cartAfterPromo}=    get total of "${cartIdCustomerA}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    8.00

 Test_Coupon_Code_Fixed_Discount_On_Carts_One_MultiCodeCoupon
	[Documentation]     Apply fixed discount on carts using one coupon code more than once (MultiCodeCoupon)
	...					
	
	# Configuring rules and drools engine
	import electronicsstore sampledata
	import sourcerule data
	compile source rule for id "coupon_code_fixed_discount" with module "promotions-module-junit"
  	set current site
  	
	# Setting variables
	${cartIdCustomerA}=    Set Variable    "022224"
	${product1}=    get product by code "301233"
	
  	${couponCodeA}=    Set Variable    SUMMER69
	
	# Test for cartIdCustomerA
  	create cart "${cartIdCustomerA}"
	add "${product1}" to cart "${cartIdCustomerA}"
	${cartBeforePromo}=    get total of "${cartIdCustomerA}"
	Should Be Equal As Numbers    ${cartBeforePromo}    21.56
 
	# $10 discount on cartIdCustomerA with coupon
	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}"
 
  	${cartAfterPromo}=    get total of "${cartIdCustomerA}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    11.56
  	
	# $10 discount on cartIdCustomerA with coupon
	release coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}"
	
  	${cartAfterPromo}=    evaluate promotion for cart "${cartIdCustomerA}" by promotion engine
  	Should Be Equal As Numbers    ${cartAfterPromo}    21.56

Test_Coupon_Code_Percentage_Discount_On_Carts
	[Documentation]     Apply fixed percentage discount on carts using one coupon code
	
	# Configuring rules and drools engine
	import electronicsstore sampledata
	import sourcerule data
	compile source rule for id "coupon_code_percentage_discount" with module "promotions-module-junit"
	set current site
  	
	# Setting variables
	${cartIdCustomerA}=    Set Variable    "022233"
    ${cartIdCustomerB}=    Set Variable    "022255"
	${product1}=    get product by code "1382080"
	
  	${couponCodeA}=    Set Variable    WINTER16
	
	# Test for cartIdCustomerA
  	create cart "${cartIdCustomerA}"
	add "${product1}" to cart "${cartIdCustomerA}"
	${cartBeforePromo}=    get total of "${cartIdCustomerA}"
	Should Be Equal As Numbers    ${cartBeforePromo}    574.88
 
	# 10% discount on cartIdCustomerA with coupon
	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}"
 
  	${cartAfterPromo}=    get total of "${cartIdCustomerA}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    517.39
 
  	# Test for cartIdCustomerB
  	create cart "${cartIdCustomerB}"
	add "${product1}" to cart "${cartIdCustomerB}"
	${cartBeforePromo}=    get total of "${cartIdCustomerB}"
	Should Be Equal As Numbers    ${cartBeforePromo}    574.88
 
  	# 10% discount on cartIdCustomerB with coupon
  	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerB}"
  	${cartAfterPromo}=    get total of "${cartIdCustomerB}"
 
  	Should Be Equal As Numbers    ${cartAfterPromo}    517.39
  	
  	# redeem coupon for cartIdCustomerA
  	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}"
  	
   	${cartAfterPromo}=    get total of "${cartIdCustomerA}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    517.39

	# release coupon for cartIdCustomerB
  	release coupon with code "${couponCodeA}" for cart "${cartIdCustomerB}"
  	
   ${cartAfterPromo}=    evaluate promotion for cart "${cartIdCustomerB}" by promotion engine
  	Should Be Equal As Numbers    ${cartAfterPromo}    574.88
  	
Test_Coupon_Code_Free_Gift_Order_Threshold_On_Carts
	[Documentation]     Apply Free Gift on carts using one coupon code
	
	# Configuring rules and drools engine
	import electronicsstore sampledata
	import sourcerule data
	compile source rule for id "coupon_code_free_gift_order_threshold" with module "promotions-module-junit"
	set current site
  	
	# Setting variables
	 ${cartIdCustomerA}=    Set Variable    "022255"
    ${cartIdCustomerB}=    Set Variable    "022266"
    ${product1}=    get product by code "1382080"  
	 ${sdcardFreeGift}=    get product by code "443175"
	 
	 
  	 ${couponCodeA}=    Set Variable    CHRISTMAS16
	
	# Test for cartIdCustomerA
  	create cart "${cartIdCustomerA}"
  	add "${product1}" to cart "${cartIdCustomerA}"
	${cartBeforePromo}=    get total of "${cartIdCustomerA}"
	Should Be Equal As Numbers    ${cartBeforePromo}    574.88
 
	# Free Gift Product on cartIdCustomerA with coupon

	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}"
  	${cartAfterPromo}=    get total of "${cartIdCustomerA}"
  	check product "${sdcardFreeGift}" quantity "1" for cart "${cartIdCustomerA}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    574.88
 
  	# Test for cartIdCustomerB
  	create cart "${cartIdCustomerB}"
  	add "${product1}" to cart "${cartIdCustomerB}"
	${cartBeforePromo}=    get total of "${cartIdCustomerB}"
	Should Be Equal As Numbers    ${cartBeforePromo}    574.88
	
	#Free Gift Product on cartIdCustomerB with coupon
  	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerB}"
  	${cartAfterPromo}=   get total of "${cartIdCustomerB}"
  	check product "${sdcardFreeGift}" quantity "1" for cart "${cartIdCustomerB}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    574.88
  	
  	# release coupon for cartIdCustomerB
  	release coupon with code "${couponCodeA}" for cart "${cartIdCustomerB}"
  	
   ${cartAfterPromo}=    evaluate promotion for cart "${cartIdCustomerB}" by promotion engine
  	Should Be Equal As Numbers    ${cartAfterPromo}    574.88
  	
  	
Test_Coupon_Code_Free_Gift_Order_Threshold_On_Carts_Threshold_Test
	[Documentation]     Apply Free Gift on carts using one coupon code
	...					Checking order threshold for coupon promotion
	
	# Configuring rules and drools engine
	import electronicsstore sampledata
	import sourcerule data
	compile source rule for id "coupon_code_free_gift_order_threshold" with module "promotions-module-junit"
	set current site
  	
	# Setting variables
	${cartIdCustomerA}=    Set Variable    "022255"
    ${cartIdCustomerB}=    Set Variable    "022266"
    ${productPriceBelowThreshold}=    get product by code "493683"
    ${productPriceAboveThreshold}=    get product by code "1382080"  
	${sdcardFreeGift}=    get product by code "443175"
		 
  	${couponCodeA}=    Set Variable    CHRISTMAS16
	
	# Test for cartIdCustomerA
  	create cart "${cartIdCustomerA}"
  	add "${productPriceBelowThreshold}" to cart "${cartIdCustomerA}"
	${cartBeforePromo}=    get total of "${cartIdCustomerA}"
	Should Be Equal As Numbers    ${cartBeforePromo}    118.45
 
	# Free Gift Product on cartIdCustomerA with coupon (order threshold below condition cart total >= $200.00)
	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}"
  	${cartAfterPromo}=    get total of "${cartIdCustomerA}"
  	check product "${sdcardFreeGift}" quantity "0" for cart "${cartIdCustomerA}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    118.45
 
    # Free Gift Product on cartIdCustomerA with coupon (order threshold above condition cart total >= $200.00)
    add "${productPriceAboveThreshold}" to cart "${cartIdCustomerA}"
    ${cartAfterPromo}=    evaluate promotion for cart "${cartIdCustomerA}" by promotion engine
    Should Be Equal As Numbers    ${cartAfterPromo}    693.33
    
    # Checking that free item was added to the cart
    check product "${sdcardFreeGift}" quantity "1" for cart "${cartIdCustomerA}"
 
  	# release coupon for cartIdCustomerA
  	release coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}" 	

    ${cartAfterPromo}=    evaluate promotion for cart "${cartIdCustomerA}" by promotion engine
    Should Be Equal As Numbers    ${cartAfterPromo}    693.33

    # Checking that free item was removed to the cart
    check product "${sdcardFreeGift}" quantity "0" for cart "${cartIdCustomerA}"


Test_Coupon_Code_And_Fixed_Threshold
	[Documentation]     Apply coupon code then over cart total threshold
	
	# Configuring rules and drools engine
	import electronicsstore sampledata
	import sourcerule data
	compile source rule for id "coupon_cart_threshold" with module "promotions-module-junit"
	set current site	
	# Setting variables
	${cartId}=    Set Variable    "034556"
	${product1}=    get product by code "23210"
	${product2}=    get product by code "300938"
	
	# The codes are actual for current implementation of CouponMockRepository
  	${couponCode}=    Set Variable    SUMMER69
  	
  	# Test for coupon and below threshold
  	create cart "${cartId}"
  	
	add "${product1}" to cart "${cartId}"
	# redeem discount - promotion shouldn't trigger yet because cart total below threshold
	redeem coupon with code "${couponCode}" for cart "${cartId}"
	${cartBeforePromo}=    get total of "${cartId}"
	Should Be Equal As Numbers    ${cartBeforePromo}    110

	add "${product2}" to cart "${cartId}"
	${cartAfterPromo}=    evaluate promotion for cart "${cartId}" by promotion engine
	Should Be Equal As Numbers    ${cartAfterPromo}    214.12

	check coupon with code "${couponCode}" used for cart "${cartId}"
	
	remove product "${product2}" for cart "${cartId}"
	evaluate promotion for cart "${cartId}" by promotion engine
	check coupon with code "${couponCode}" not used for cart "${cartId}"
	
Test_Coupon_Code_And_Product
	[Documentation]     Apply coupon code then conditional product
	
	# Configuring rules and drools engine
	import electronicsstore sampledata
	import sourcerule data
	compile source rule for id "coupon_PowershotA480" with module "promotions-module-junit"
	set current site
	
	# Setting variables
	${cartId}=    Set Variable    "034557"
	${product1}=    get product by code "23210"
	${product2}=    get product by code "1934794"
	
	# The codes are actual for current implementation of CouponMockRepository
  	${couponCode}=    Set Variable    SUMMER69
  	
  	# Test for coupon and below threshold
  	create cart "${cartId}"
  	
	add "${product1}" to cart "${cartId}"
	# redeem discount - promotion shouldn't trigger yet because cart total below threshold
	redeem coupon with code "${couponCode}" for cart "${cartId}"
	${cartBeforePromo}=    get total of "${cartId}"
	Should Be Equal As Numbers    ${cartBeforePromo}    110
	check coupon with code "${couponCode}" not used for cart "${cartId}"

	add "${product2}" to cart "${cartId}"
	evaluate promotion for cart "${cartId}" by promotion engine
	check coupon with code "${couponCode}" used for cart "${cartId}"
	
	remove product "${product2}" for cart "${cartId}"
	evaluate promotion for cart "${cartId}" by promotion engine
	check coupon with code "${couponCode}" not used for cart "${cartId}"


Test_Coupon_Code_Percentage_Discount_On_Products
	[Documentation]     Apply percentage discount on products using coupon code
	
	# Configuring rules and drools engine
	import electronicsstore sampledata
	import sourcerule data
	compile source rule for id "coupon_code_percentage_discount_on_products" with module "promotions-module-junit"
	set current site
  	
	# Setting variables
	${cartIdCustomerA}=    Set Variable    "022222"
	${cartIdCustomerB}=    Set Variable    "022255"
	${cartIdCustomerC}=    Set Variable    "022288"	
	${productA}=    get product by code "493683"
	${productB}=    get product by code "2934302"	
	${productOutside}=    get product by code "1641905"	
	${couponCode}=    Set Variable    BUYMORE16
	
	# Test for cartIdCustomerA , cart with product from qualifying categories 
	create cart "${cartIdCustomerA}"
	add "${productA}" to cart "${cartIdCustomerA}"
	add "${productOutside}" to cart "${cartIdCustomerA}"
	${cartBeforePromo}=    get total of "${cartIdCustomerA}"
	Should Be Equal As Numbers    ${cartBeforePromo}    261.15

	# 25% discount on cartIdCustomerA with coupon
	redeem coupon with code "${couponCode}" for cart "${cartIdCustomerA}"
 
	${cartAfterPromo}=    get total of "${cartIdCustomerA}"
	Should Be Equal As Numbers    ${cartAfterPromo}    231.54
	
	# release coupon for cartIdCustomerA
	release coupon with code "${couponCode}" for cart "${cartIdCustomerA}"
  	
	${cartAfterPromo}=    get total of "${cartIdCustomerA}"
	Should Be Equal As Numbers    ${cartAfterPromo}    261.15
	
	# Test for cartIdCustomerB , cart with qualifying product
	create cart "${cartIdCustomerB}"
	add "${productB}" to cart "${cartIdCustomerB}"
	${cartBeforePromo}=    get total of "${cartIdCustomerB}"
	Should Be Equal As Numbers    ${cartBeforePromo}    508.88

	# 25% discount is not applied on cartIdCustomerB with coupon
	redeem coupon with code "${couponCode}" for cart "${cartIdCustomerB}"
 
	${cartAfterPromo}=    get total of "${cartIdCustomerB}"
	Should Be Equal As Numbers    ${cartAfterPromo}    508.88
	
	# release coupon for cartIdCustomerB
	release coupon with code "${couponCode}" for cart "${cartIdCustomerB}"
  	
	${cartAfterPromo}=    get total of "${cartIdCustomerB}"
	Should Be Equal As Numbers    ${cartAfterPromo}    508.88
	
	# try to apply coupon with product outside condition
	create cart "${cartIdCustomerC}"
	add "${productOutside}" to cart "${cartIdCustomerC}"
	${cartBeforePromo}=    get total of "${cartIdCustomerC}"
	Should Be Equal As Numbers    ${cartBeforePromo}    142.70

	# 25% discount on cartIdCustomerA with coupon
	redeem coupon with code "${couponCode}" for cart "${cartIdCustomerC}"
 
	${cartAfterPromo}=    get total of "${cartIdCustomerC}"
	Should Be Equal As Numbers    ${cartAfterPromo}    142.70
	
	# release coupon for cartIdCustomerA
	release coupon with code "${couponCode}" for cart "${cartIdCustomerC}"
  	
	${cartAfterPromo}=    get total of "${cartIdCustomerC}"
	Should Be Equal As Numbers    ${cartAfterPromo}    142.70

Test_Coupon_Code_Fixed_Discount_On_Carts_Coupon_Applied_Twice
	[Documentation]     Apply fixed discount on carts using the same coupon code twice
    ...					on the same cart						
	
	# Configuring rules and drools engine
	import electronicsstore sampledata
	import sourcerule data
	compile source rule for id "coupon_code_fixed_discount" with module "promotions-module-junit"
	set current site
  	
	# Setting variables
	${cartIdCustomerA}=    Set Variable    "022222"
	${product1}=    get product by code "1382080"
	
  	${couponCodeA}=    Set Variable    SUMMER69
	
	# Test for cartIdCustomerA
  	create cart "${cartIdCustomerA}"
	add "${product1}" to cart "${cartIdCustomerA}"
	${cartBeforePromo}=    get total of "${cartIdCustomerA}"
	Should Be Equal As Numbers    ${cartBeforePromo}    574.88
 
	# $10 discount on cartIdCustomerA with coupon
	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}"
 
  	${cartAfterPromo}=    get total of "${cartIdCustomerA}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    564.88

	# trying to add $10 discount on cartIdCustomerA with the same coupon
	redeem coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}"

 	${cartAfterPromo}=    get total of "${cartIdCustomerA}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    564.88
  	
  	# release coupon for cartIdCustomerA
  	release coupon with code "${couponCodeA}" for cart "${cartIdCustomerA}"
  	
   ${cartAfterPromo}=    get total of "${cartIdCustomerA}"
  	Should Be Equal As Numbers    ${cartAfterPromo}    574.88

